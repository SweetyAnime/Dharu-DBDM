-- Account Table
CREATE TABLE Accounts (
    AccountID INT PRIMARY KEY,
    Balance DECIMAL(10, 2) DEFAULT 0
);

-- Transaction History Table
CREATE TABLE Transaction_History (
    TransactionID INT AUTO_INCREMENT PRIMARY KEY,
    AccountID INT,
    TransactionType VARCHAR(50),
    Amount DECIMAL(10, 2),
    TransactionDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


Stored Procedures:
i)Deposit Procedure:
DELIMITER //

CREATE PROCEDURE Deposit(IN accID INT, IN amt DECIMAL(10, 2))
BEGIN
    -- Increase balance
    UPDATE Accounts SET Balance = Balance + amt WHERE AccountID = accID;

    -- Log transaction
    INSERT INTO Transaction_History (AccountID, TransactionType, Amount)
    VALUES (accID, 'Deposit', amt);
END //

DELIMITER ;

ii) Withdrawal Procedure:
DELIMITER //

CREATE PROCEDURE Withdraw(IN accID INT, IN amt DECIMAL(10, 2))
BEGIN
    -- Check balance
    IF (SELECT Balance FROM Accounts WHERE AccountID = accID) >= amt THEN
        -- Decrease balance
        UPDATE Accounts SET Balance = Balance - amt WHERE AccountID = accID;

        -- Log transaction
        INSERT INTO Transaction_History (AccountID, TransactionType, Amount)
        VALUES (accID, 'Withdrawal', amt);
    ELSE
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Insufficient balance';
    END IF;
END //

DELIMITER ;





Test Commands:
1. Insert Sample Data:
INSERT INTO Accounts (AccountID, Balance) VALUES (1, 500); 

2. Perform Deposit:
CALL Deposit(1, 200); 

3. Perform Withdrawal:
CALL Withdraw(1, 100); 

4. Check Results:
SELECT * FROM Accounts;
SELECT * FROM Transaction_History; 
